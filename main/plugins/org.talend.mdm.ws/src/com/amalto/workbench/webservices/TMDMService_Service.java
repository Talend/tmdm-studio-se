package com.amalto.workbench.webservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.15
 * 2015-03-25T19:00:38.964+08:00
 * Generated source version: 2.6.15
 * 
 */
@WebServiceClient(name = "TMDMService", 
                  wsdlLocation = "file:/D:/workspace/workplaceB/studio/tmdm-studio-se/main/plugins/org.talend.mdm.ws/./tos_webservice.wsdl",
                  targetNamespace = "http://www.talend.com/mdm") 
public class TMDMService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.talend.com/mdm", "TMDMService");
    public final static QName TMDMPort = new QName("http://www.talend.com/mdm", "TMDMPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/workspace/workplaceB/studio/tmdm-studio-se/main/plugins/org.talend.mdm.ws/./tos_webservice.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(TMDMService_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/D:/workspace/workplaceB/studio/tmdm-studio-se/main/plugins/org.talend.mdm.ws/./tos_webservice.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public TMDMService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TMDMService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TMDMService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns TMDMService
     */
    @WebEndpoint(name = "TMDMPort")
    public TMDMService getTMDMPort() {
        return super.getPort(TMDMPort, TMDMService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TMDMService
     */
    @WebEndpoint(name = "TMDMPort")
    public TMDMService getTMDMPort(WebServiceFeature... features) {
        return super.getPort(TMDMPort, TMDMService.class, features);
    }

}
